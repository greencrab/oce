From: QbProg <tholag@gmail.com>
Date: Sat, 11 Jun 2011 16:40:14 +0200
Subject: [PATCH 40/82] [warning-fix][old_declarators]

Removed old-style C declarators from TKIges
---
 src/IGESFile/analiges.c   |   15 +++++----------
 src/IGESFile/igesread.c   |    3 +--
 src/IGESFile/structiges.c |   33 +++++++++++----------------------
 3 files changed, 17 insertions(+), 34 deletions(-)

Index: oce/src/IGESFile/analiges.c
===================================================================
--- oce.orig/src/IGESFile/analiges.c
+++ oce/src/IGESFile/analiges.c
@@ -35,8 +35,7 @@
 /*      Utilitaire decodant un nombre en format fixe dans une ligne
 	Il part de "depuis" inclus (debut ligne = 0) et prend "tant" caracteres
 	Valeur lue en retour de fonction   */
-static int IGES_decode(ligne,depuis,tant)
-char* ligne; int depuis, tant;
+static int IGES_decode(char* ligne,int depuis, int tant)
 {
   int val = 0; int i;
   int depart = depuis+tant-1;
@@ -51,8 +50,7 @@
 }
 
 /*   Recopie d'une chaine de caracteres de longueur fixe (close par \0)  */
-void IGES_copstr(ligne,depuis,tant,dans)
-char *ligne; int depuis, tant; char* dans;
+void IGES_copstr(char *ligne, int depuis,int tant, char* dans)
 {
   int i;
   for (i = 0; i < tant; i ++) { dans[i] = ligne[depuis+i]; }
@@ -60,8 +58,7 @@
 }
 
 /*                   Analyse section D                */
-void iges_Dsect (Dstat,numsec,ligne)
-int *Dstat,numsec; char* ligne;
+void iges_Dsect (int * Dstat,int numsec, char * ligne)
 {
   struct dirpart *curp;
   if (*Dstat == 0) {
@@ -105,8 +102,7 @@
 /*     Lecture section P : preanalyse
        Extraction du numero D et troncature a 64 caracteres  */
 
-void iges_Psect(Pstat,numsec,ligne)
-int *Pstat; int numsec; char ligne[80];
+void iges_Psect(int *Pstat,int numsec,char ligne[80])
 {
   int dnum;
   dnum = atoi(&ligne[65]);
@@ -134,8 +130,7 @@
 /*  +  definitions des types de parametres en tete  */
 
 
-void iges_param(Pstat,ligne,c_separ,c_fin,lonlin)
-int *Pstat; char c_separ,c_fin, *ligne; int lonlin;
+void iges_param(int * Pstat,char * ligne, char c_separ,char c_fin,int lonlin)
 {
   int i,i0,j; char param[80]; char unpar;
   if (*Pstat == 0) reste  = 0;
Index: oce/src/IGESFile/igesread.c
===================================================================
--- oce.orig/src/IGESFile/igesread.c
+++ oce/src/IGESFile/igesread.c
@@ -37,8 +37,7 @@
 static  char sects [] = " SGDPT ";
 
 
-int igesread(nomfic,lesect,modefnes)
-char* nomfic; int lesect[6]; int modefnes;
+int igesread(char* nomfic,int lesect[6],int modefnes)
 {
   /* MGE 16/06/98 */
 
Index: oce/src/IGESFile/structiges.c
===================================================================
--- oce.orig/src/IGESFile/structiges.c
+++ oce/src/IGESFile/structiges.c
@@ -72,8 +72,7 @@
 /*    Utilitaire : Reservation de caracteres
       Remplace suite de mini-malloc par gestion de page   */
 
-char* iges_newchar(newtext,lentext)
-char* newtext; int lentext;
+char* iges_newchar(char*  newtext, int lentext)
 {
   int i, lnt;
   if ((lnt = onecarpage->used) > Maxcar-lentext-1) {  /* allouer nouvelle page */
@@ -123,8 +122,7 @@
 
 /*   Definition et Selection d'un nouveau dirpart   */
 
-void iges_newpart(numsec)
-int numsec;
+void iges_newpart(int numsec)
 {
   if (curpage->used >= Maxparts) {
     struct dirpage* newpage;
@@ -143,8 +141,7 @@
 
 /*   Selection du dirpart dnum, correspond a numsec en Psect   */
 
-void iges_curpart(numsec,dnum)
-int numsec,dnum;
+void iges_curpart(int numsec, int dnum)
 {
   if (curp == NULL) return;
   if (dnum == curp->numpart) return;
@@ -178,8 +175,7 @@
 /*   (manque la gestion d'un Hollerith sur plusieurs lignes)   */
 
 /*   longval : longueur de parval, incluant le zero final   */
-void iges_newparam(typarg,longval,parval)
-int typarg,longval; char *parval;
+void iges_newparam(int typarg, int longval, char *parval)
 {
   char *newval;
   if (curlist == NULL) return;      /*  non defini : abandon  */
@@ -204,8 +200,7 @@
 }
 
 /*     Complement du parametre courant (cf Hollerith sur +ieurs lignes)    */
-void iges_addparam(longval,parval)
-int longval; char* parval;
+void iges_addparam(int longval, char* parval)
 {
   char *newval, *oldval; int i,long0;
   if (longval <= 0) return;
@@ -223,8 +218,7 @@
 /*               Relecture : Initialiation              */
 /*  entites relues par suite de lirpart + {lirparam}
     lirparam initiaux : pour relire le demarrage (start section)   */
-void iges_stats(nbpart, nbparam)
-int* nbpart; int* nbparam;
+void iges_stats(int* nbpart, int* nbparam)
 {
   curpage  = firstpage; curnumpart = 0;
   curlist  = starts;
@@ -234,12 +228,9 @@
 }
 
 /*               Lecture d'une part : retour = n0 section, 0 si fin         */
-int iges_lirpart
-  (tabval, res1,res2,nom,num, nbparam)
-
-int* *tabval;        /* tableau recepteur des entiers (reserver 17 valeurs) */
-char* *res1; char* *res2; char* *nom; char* *num;  /* char : transmis a part */
-int *nbparam;
+/* tabval : tableau recepteur des entiers (reserver 17 valeurs) */
+/* char ** parameters : transmis a part */
+int iges_lirpart (int* *tabval, char* *res1,char* *res2,char* *nom,char* *num, int *nbparam)
 {
   if (curpage == NULL) return 0;
   curp = &(curpage->parts[curnumpart]);
@@ -263,8 +254,7 @@
 }
 
 /*               Lecture parametre + passage au suivant                   */
-int iges_lirparam(typarg,parval)    /* renvoie 0 si fin de liste, 1 sinon */
-int *typarg; char* *parval;
+int iges_lirparam(int *typarg,char* *parval)    /* renvoie 0 si fin de liste, 1 sinon */
 {
   if (curparam == NULL) return 0;
   *typarg = curparam->typarg;
@@ -275,8 +265,7 @@
 
 /*               Fin pour ce fichier : liberer la place                  */
 /*    mode = 0 : tout; 1 : parametres; 2 : caracteres  */
-void iges_finfile(mode)
-int mode;
+void iges_finfile(int mode)
 {
   struct dirpage* oldpage;
   if (mode == 0 || mode == 2) {  free (starts);  free (header);  }
